"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[8175],{"../../libs/map/src/components/layer-style/stories/vl-map-layer-style.stories.ts":(e,t,r)=>{r.r(t),r.d(t,{MapLayerStyleDefault:()=>c,MapLayerStyleLegend:()=>x,MapLayerStyleText:()=>i,__namedExportsOrder:()=>u,default:()=>d});var a=r("../../resources/utils-storybook/index.ts"),o=r("../../node_modules/lit-html/lit-html.js");r("../../libs/map/src/vl-map.ts"),r("../../libs/map/src/components/baselayer/vl-map-base-layer-grb-gray/vl-map-base-layer-grb-gray.ts"),r("../../libs/map/src/components/layer/vector-layer/vl-map-features-layer/vl-map-features-layer.ts"),r("../../libs/map/src/components/layer-style/vl-map-layer-style.ts");var l=r("../../libs/map/src/components/layer-style/stories/vl-map-layer-style.stories-arg.ts");r("../../node_modules/react/index.js");var n=r("../../node_modules/react/jsx-runtime.js"),s=r("../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),y=r("../../node_modules/@storybook/blocks/dist/index.mjs");function p(e){let t=Object.assign({h1:"h1",p:"p",code:"code",a:"a",strong:"strong",h2:"h2",pre:"pre",h3:"h3"},(0,s.RP)(),e.components),{FluxMetaData:r}=t;return r||function(e,t){throw Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("FluxMetaData",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"map-layer-style",children:"Map Layer Style"}),"\n",(0,n.jsx)(r,{id:"map-layer-style"}),"\n",(0,n.jsxs)(t.p,{children:["Gebruik de ",(0,n.jsx)(t.code,{children:"map-layer-style"})," component om een\n",(0,n.jsx)(t.a,{href:"/docs/map-layer-vector-layer-features-layer--map-features-layer-default",children:"features-layer"})," of een\n",(0,n.jsx)(t.a,{href:"/docs/map-layer-vector-layer-wfs-layer--map-wfs-layer-default",children:"wfs-layer"})," te stylen.",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.strong,{children:"Let op"}),": Bij gebruik van de ",(0,n.jsx)(t.a,{href:"/docs/map-legend--map-legend-features-layer-multiple-styles",children:"map-legend"})," worden de\nattributen niet reactief toegepast op de legende."]}),"\n",(0,n.jsx)(t.h2,{id:"voorbeeld",children:"Voorbeeld"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",children:"import { VlMapLayerStyle } from '@domg-wc/map';\n"})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-html",children:"<vl-map-layer-style></vl-map-layer-style>\n"})}),"\n",(0,n.jsx)(y.Hl,{of:c}),"\n",(0,n.jsx)(t.h2,{id:"configuratie",children:"Configuratie"}),"\n",(0,n.jsx)(y.ov,{of:c}),"\n",(0,n.jsx)(t.h2,{id:"varianten",children:"Varianten"}),"\n",(0,n.jsx)(t.h3,{id:"met-tekst",children:"Met tekst"}),"\n",(0,n.jsx)(y.Hl,{of:i}),"\n",(0,n.jsx)(t.h3,{id:"met-legende",children:"Met legende"}),"\n",(0,n.jsx)(y.Hl,{of:x}),"\n",(0,n.jsx)(t.h2,{id:"referenties",children:"Referenties"}),"\n",(0,n.jsx)(t.h3,{id:"legacy-documentatie",children:"Legacy Documentatie"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://webcomponenten.omgeving.vlaanderen.be/storybook/?path=/docs/custom-elements-vl-map-vl-map-layer-style--default",target:"_blank",rel:"nofollow noopener noreferrer",children:"Legacy Storybook - Map Layer Style"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://webcomponenten.omgeving.vlaanderen.be/doc/VlMapLayerStyle.html",target:"_blank",rel:"nofollow noopener noreferrer",children:"Legacy Documentatie - Map Layer Style"})}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://webcomponenten.omgeving.vlaanderen.be/demo/vl-map-layer-style.html",target:"_blank",rel:"nofollow noopener noreferrer",children:"Legacy Demo - Map Layer Style"})})]})}let d={id:"map-layer-style",title:"map/layer-style",tags:["autodocs"],args:l.f,argTypes:l.E,parameters:{docs:{page:function(e={}){let{wrapper:t}=Object.assign({},(0,s.RP)(),e.components);return t?(0,n.jsx)(t,Object.assign({},e,{children:(0,n.jsx)(p,e)})):p(e)}}}},m=(0,a._7)(l.f,({borderColor:e,borderSize:t,color:r,name:a,textBackgroundColor:l,textBorderColor:n,textBorderSize:s,textColor:y,textFeatureAttributeName:p,textOffsetX:d,textOffsetY:m,textSize:c})=>(0,o.qy)` <vl-map>
            <vl-map-baselayer-grb-gray></vl-map-baselayer-grb-gray>
            <vl-map-features-layer .features=${{type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"Polygon",coordinates:[[[147055,197908],[157055,197908],[157055,187908],[147055,187908],[147055,197908]]]},properties:{label:"Text"}}]}}>
                <vl-map-layer-style
                    border-color=${e}
                    border-size=${t}
                    color=${r}
                    name=${a}
                    text-background-color=${l}
                    text-border-color=${n}
                    text-border-size=${s}
                    text-color=${y}
                    text-feature-attribute-name=${p}
                    text-offset-x=${d}
                    text-offset-y=${m}
                    text-size=${c}
                >
                </vl-map-layer-style>
            </vl-map-features-layer>
        </vl-map>`),c=m.bind({});c.storyName="vl-map-layer-style - default";let i=m.bind({});i.storyName="vl-map-layer-style - text",i.args={textColor:"rgba(255, 255, 255, 1)",textFeatureAttributeName:"label",textSize:"12px"};let x=(0,a._7)(l.f,({borderColor:e,borderSize:t,color:r,name:a,textBackgroundColor:l,textBorderColor:n,textBorderSize:s,textColor:y,textFeatureAttributeName:p,textOffsetX:d,textOffsetY:m,textSize:c})=>(0,o.qy)` <vl-map>
            <vl-map-baselayer-grb-gray></vl-map-baselayer-grb-gray>
            <vl-map-features-layer .features=${{type:"FeatureCollection",features:[{type:"Feature",geometry:{type:"Polygon",coordinates:[[[147055,197908],[157055,197908],[157055,187908],[147055,187908],[147055,197908]]]},properties:{label:"Text"}}]}}>
                <vl-map-layer-style
                    border-color=${e}
                    border-size=${t}
                    color=${r}
                    name=${a}
                    text-background-color=${l}
                    text-border-color=${n}
                    text-border-size=${s}
                    text-color=${y}
                    text-feature-attribute-name=${p}
                    text-offset-x=${d}
                    text-offset-y=${m}
                    text-size=${c}
                >
                </vl-map-layer-style>
            </vl-map-features-layer>
            <vl-map-legend></vl-map-legend>
        </vl-map>`);x.storyName="vl-map-layer-style - legend",x.args={name:"Laag 1"},c.parameters={...c.parameters,docs:{...c.parameters?.docs,source:{originalSource:"story(mapLayerStyleArg, ({\n  borderColor,\n  borderSize,\n  color,\n  name,\n  textBackgroundColor,\n  textBorderColor,\n  textBorderSize,\n  textColor,\n  textFeatureAttributeName,\n  textOffsetX,\n  textOffsetY,\n  textSize\n}) => {\n  const features = {\n    type: 'FeatureCollection',\n    features: [{\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[[147055.0, 197908.0], [157055.0, 197908.0], [157055.0, 187908.0], [147055.0, 187908.0], [147055.0, 197908.0]]]\n      },\n      properties: {\n        label: 'Text'\n      }\n    }]\n  };\n  return html` <vl-map>\n            <vl-map-baselayer-grb-gray></vl-map-baselayer-grb-gray>\n            <vl-map-features-layer .features=${features}>\n                <vl-map-layer-style\n                    border-color=${borderColor}\n                    border-size=${borderSize}\n                    color=${color}\n                    name=${name}\n                    text-background-color=${textBackgroundColor}\n                    text-border-color=${textBorderColor}\n                    text-border-size=${textBorderSize}\n                    text-color=${textColor}\n                    text-feature-attribute-name=${textFeatureAttributeName}\n                    text-offset-x=${textOffsetX}\n                    text-offset-y=${textOffsetY}\n                    text-size=${textSize}\n                >\n                </vl-map-layer-style>\n            </vl-map-features-layer>\n        </vl-map>`;\n})",...c.parameters?.docs?.source}}},i.parameters={...i.parameters,docs:{...i.parameters?.docs,source:{originalSource:"story(mapLayerStyleArg, ({\n  borderColor,\n  borderSize,\n  color,\n  name,\n  textBackgroundColor,\n  textBorderColor,\n  textBorderSize,\n  textColor,\n  textFeatureAttributeName,\n  textOffsetX,\n  textOffsetY,\n  textSize\n}) => {\n  const features = {\n    type: 'FeatureCollection',\n    features: [{\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[[147055.0, 197908.0], [157055.0, 197908.0], [157055.0, 187908.0], [147055.0, 187908.0], [147055.0, 197908.0]]]\n      },\n      properties: {\n        label: 'Text'\n      }\n    }]\n  };\n  return html` <vl-map>\n            <vl-map-baselayer-grb-gray></vl-map-baselayer-grb-gray>\n            <vl-map-features-layer .features=${features}>\n                <vl-map-layer-style\n                    border-color=${borderColor}\n                    border-size=${borderSize}\n                    color=${color}\n                    name=${name}\n                    text-background-color=${textBackgroundColor}\n                    text-border-color=${textBorderColor}\n                    text-border-size=${textBorderSize}\n                    text-color=${textColor}\n                    text-feature-attribute-name=${textFeatureAttributeName}\n                    text-offset-x=${textOffsetX}\n                    text-offset-y=${textOffsetY}\n                    text-size=${textSize}\n                >\n                </vl-map-layer-style>\n            </vl-map-features-layer>\n        </vl-map>`;\n})",...i.parameters?.docs?.source}}},x.parameters={...x.parameters,docs:{...x.parameters?.docs,source:{originalSource:"story(mapLayerStyleArg, ({\n  borderColor,\n  borderSize,\n  color,\n  name,\n  textBackgroundColor,\n  textBorderColor,\n  textBorderSize,\n  textColor,\n  textFeatureAttributeName,\n  textOffsetX,\n  textOffsetY,\n  textSize\n}) => {\n  const features = {\n    type: 'FeatureCollection',\n    features: [{\n      type: 'Feature',\n      geometry: {\n        type: 'Polygon',\n        coordinates: [[[147055.0, 197908.0], [157055.0, 197908.0], [157055.0, 187908.0], [147055.0, 187908.0], [147055.0, 197908.0]]]\n      },\n      properties: {\n        label: 'Text'\n      }\n    }]\n  };\n  return html` <vl-map>\n            <vl-map-baselayer-grb-gray></vl-map-baselayer-grb-gray>\n            <vl-map-features-layer .features=${features}>\n                <vl-map-layer-style\n                    border-color=${borderColor}\n                    border-size=${borderSize}\n                    color=${color}\n                    name=${name}\n                    text-background-color=${textBackgroundColor}\n                    text-border-color=${textBorderColor}\n                    text-border-size=${textBorderSize}\n                    text-color=${textColor}\n                    text-feature-attribute-name=${textFeatureAttributeName}\n                    text-offset-x=${textOffsetX}\n                    text-offset-y=${textOffsetY}\n                    text-size=${textSize}\n                >\n                </vl-map-layer-style>\n            </vl-map-features-layer>\n            <vl-map-legend></vl-map-legend>\n        </vl-map>`;\n})",...x.parameters?.docs?.source}}};let u=["MapLayerStyleDefault","MapLayerStyleText","MapLayerStyleLegend"]}}]);