"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[1751],{"../../node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs":(n,e,t)=>{t.d(e,{f:()=>b});var o=t("../../node_modules/react/index.js"),r=t("../../node_modules/react-dom/client.js"),l=new Map,a=({callback:n,children:e})=>{let t=(0,o.useRef)();return(0,o.useLayoutEffect)(()=>{t.current!==n&&(t.current=n,n())},[n]),e},i=async(n,e)=>{let t=await c(e);return new Promise(e=>{t.render(o.createElement(a,{callback:()=>e(null)},n))})},d=(n,e)=>{let t=l.get(n);t&&(t.unmount(),l.delete(n))},c=async n=>{let e=l.get(n);return e||(e=r.createRoot(n),l.set(n,e)),e},s=t("../../node_modules/@storybook/blocks/dist/index.mjs"),u={code:s.XA,a:s.zE,...s.Sw},g=class extends o.Component{constructor(){super(...arguments),this.state={hasError:!1}}static getDerivedStateFromError(){return{hasError:!0}}componentDidCatch(n){let{showException:e}=this.props;e(n)}render(){let{hasError:n}=this.state,{children:e}=this.props;return n?null:o.createElement(o.Fragment,null,e)}},b=class{constructor(){this.render=async(n,e,r)=>{let l={...u,...e?.components},a=s.kQ;return new Promise((d,c)=>{t.e(814).then(t.bind(t,"../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/index.js")).then(({MDXProvider:t})=>i(o.createElement(g,{showException:c,key:Math.random()},o.createElement(t,{components:l},o.createElement(a,{context:n,docsParameter:e}))),r)).then(()=>d())})},this.unmount=n=>{d(n)}}}},"../../node_modules/@storybook/addon-docs/dist/index.mjs":(n,e,t)=>{t.d(e,{Hl:()=>o.Hl,W8:()=>o.W8,kL:()=>o.kL,ov:()=>o.ov}),t("../../node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var o=t("../../node_modules/@storybook/blocks/dist/index.mjs")},"../../libs/components/src/atom/button/stories/vl-button.stories.ts":(n,e,t)=>{t.r(e),t.d(e,{ButtonBlock:()=>w,ButtonCtaLink:()=>R,ButtonDisabled:()=>x,ButtonError:()=>j,ButtonGhost:()=>f,ButtonIcon:()=>L,ButtonIconOnly:()=>E,ButtonIconOnlyGhost:()=>G,ButtonInputGroup:()=>C,ButtonLarge:()=>T,ButtonLoading:()=>B,ButtonNarrow:()=>S,ButtonPrimary:()=>k,ButtonSecondary:()=>h,ButtonTertiary:()=>v,ButtonToggle:()=>A,ButtonWide:()=>V,__namedExportsOrder:()=>N,default:()=>$});var o=t("../../resources/utils-storybook/index.ts"),r=t("../../node_modules/@storybook/addon-actions/dist/index.mjs"),l=t("../../libs/components/src/atom/button/vl-button.defaults.ts");let a={...o.D8,...l.j,defaultSlot:"",onVlClick:(0,r.XI)("vl-click"),onVlToggle:(0,r.XI)("vl-toggle")},i={...o.RN,type:{name:"type",description:"Het type van de button.",table:{type:{summary:o.QE.STRING},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.type}}},disabled:{name:"disabled",description:"Duidt aan dat de button uitgeschakeld is.",table:{type:{summary:o.QE.BOOLEAN},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.disabled}}},error:{name:"error",description:"Beeldt de button af als een error button.",table:{type:{summary:o.QE.BOOLEAN},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.error}}},block:{name:"block",description:"Duidt aan dat de button de volledige breedte van zijn parent mag innemen.",table:{type:{summary:o.QE.BOOLEAN},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.block}}},large:{name:"large",description:"Beeldt de button groot af.",table:{type:{summary:o.QE.BOOLEAN},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.large}}},wide:{name:"wide",description:"Beeldt de button breed af.",table:{type:{summary:o.QE.BOOLEAN},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.wide}}},narrow:{name:"narrow",description:"Beeldt de button smal af.",table:{type:{summary:o.QE.BOOLEAN},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.narrow}}},secondary:{name:"secondary",description:"Beeldt de button af als een secondary button.",table:{type:{summary:o.QE.BOOLEAN},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.secondary}}},tertiary:{name:"tertiary",description:"Beeldt de button af als een tertiary button.",table:{type:{summary:o.QE.BOOLEAN},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.tertiary}}},ghost:{name:"ghost",description:"Beeldt de button af als een ghost button.",table:{type:{summary:o.QE.BOOLEAN},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.ghost}}},loading:{name:"loading",description:"Beeldt de button af als een loading button.<br/>We raden aan dit enkel te gebruiken voor primary buttons.",table:{type:{summary:o.QE.BOOLEAN},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.loading}}},icon:{name:"icon",description:"Beeldt een icoon af in de button.<br/>Standaard wordt dit icoon voor de tekst afgebeeld.",table:{type:{summary:o.QE.STRING},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.icon}}},iconPlacement:{name:"icon-placement",description:"De positie van het icoon ten opzichte van de tekst.<br>Voegt margin toe tussen het icoon en de tekst.",control:{type:o.VH.SELECT},options:["",...Object.values(o.aK)],table:{type:{summary:(0,o.uf)(Object.values(o.aK))},category:o.R6.ATTRIBUTES,defaultArgs:{summary:a.iconPlacement},defaultValue:{summary:o.aK.BEFORE}}},toggle:{name:"toggle",description:"Beeldt de button af als een toggle button.",table:{type:{summary:o.QE.BOOLEAN},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.toggle}}},on:{name:"on",description:"Duidt aan dat de toggle button aan staat.<br>Te gebruiken in combinatie met het `toggle` attribuut.",table:{type:{summary:o.QE.BOOLEAN},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.on}}},controlled:{name:"controlled",description:"Duidt aan dat de state van de toggle button gecontroleerd wordt door een parent component.<br>De button zal zijn eigen `on` attribuut niet veranderen.<br>Te gebruiken in combinatie met het `toggle` attribuut.",table:{type:{summary:o.QE.BOOLEAN},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.controlled}}},ctaLink:{name:"cta-link",description:"Specifieert de cta-link (call to action link), zorgt ervoor dat de component een link (`<a>`) wordt met button-styling.",table:{type:{summary:o.QE.STRING},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.ctaLink}}},external:{name:"external",description:"Opent de link in een nieuw tabblad. Dit attribuut wordt enkel gebruikt als de `cta-link` is ingesteld.",table:{type:{summary:o.QE.BOOLEAN},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.external}}},inputGroup:{name:"input-group",description:"Duidt aan dat de component deel is van een input-group.",table:{type:{summary:o.QE.BOOLEAN},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.inputGroup}}},label:{name:"label",description:"Stelt het aria-label attribuut van de button in.",table:{type:{summary:o.QE.STRING},category:o.R6.ATTRIBUTES,defaultValue:{summary:a.label}}},defaultSlot:{name:"[default]",description:"De content van de button.",table:{type:{summary:o.QE.HTML},category:o.R6.SLOTS,defaultValue:{summary:a.defaultSlot}}},onVlClick:{name:"vl-click",description:"Event dat afgevuurd wordt bij het klikken op de button.",table:{category:o.R6.EVENTS}},onVlToggle:{name:"vl-toggle",description:"Event dat afgevuurd wordt als het `on` attribuut van de button verandert.",table:{type:{summary:"{ on: boolean }"},category:o.R6.EVENTS}}};var d=t("../../node_modules/lit/index.js"),c=t("../../libs/components/src/atom/button/vl-button.component.ts"),s=t("../../libs/common/src/index.ts"),u=t("../../node_modules/lit/directives/unsafe-html.js");t("../../node_modules/react/index.js");var g=t("../../node_modules/react/jsx-runtime.js"),b=t("../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),m=t("../../node_modules/@storybook/addon-docs/dist/index.mjs");function p(n){let e=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",pre:"pre",h3:"h3",a:"a",ul:"ul",li:"li"},(0,b.RP)(),n.components),{FluxMetaData:t}=e;return t||function(n,e){throw Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("FluxMetaData",!0),(0,g.jsxs)(g.Fragment,{children:[(0,g.jsx)(e.h1,{id:"button",children:"Button"}),"\n",(0,g.jsx)(t,{id:"components-atom-button"}),"\n",(0,g.jsxs)(e.p,{children:["Gebruik de ",(0,g.jsx)(e.code,{children:"button"})," component om een button af te beelden op een pagina."]}),"\n",(0,g.jsx)(e.h2,{id:"voorbeeld",children:"Voorbeeld"}),"\n",(0,g.jsx)(e.pre,{children:(0,g.jsx)(e.code,{className:"language-js",children:"import { VlButtonComponent } from '@domg-wc/components/atom';\n"})}),"\n",(0,g.jsx)(e.pre,{children:(0,g.jsx)(e.code,{className:"language-html",children:"<vl-button></vl-button>\n"})}),"\n",(0,g.jsx)(m.Hl,{of:k}),"\n",(0,g.jsx)(e.h2,{id:"configuratie",children:"Configuratie"}),"\n",(0,g.jsx)(m.ov,{of:k}),"\n",(0,g.jsx)(e.h2,{id:"varianten",children:"Varianten"}),"\n",(0,g.jsx)(e.h3,{id:"secondary",children:"Secondary"}),"\n",(0,g.jsx)(e.p,{children:"Gebruik een secondary button om een 1 of meerdere buttons af te beelden in combinatie met een primary button."}),"\n",(0,g.jsx)(m.Hl,{of:h}),"\n",(0,g.jsx)(e.h3,{id:"tertiary",children:"Tertiary"}),"\n",(0,g.jsxs)(e.p,{children:["Gebruik een tertiary button om een 1 of meerdere buttons af te beelden in combinatie met een primary button.",(0,g.jsx)("br",{}),"\nEen tertiary button is subtieler dan een secondary button."]}),"\n",(0,g.jsx)(m.Hl,{of:v}),"\n",(0,g.jsx)(e.h3,{id:"ghost",children:"Ghost"}),"\n",(0,g.jsx)(e.p,{children:"Gebruik een ghost button om enkel de knop tekst of icoon af te beelden, zonder opmaak (border, background).\nEen ghost button neemt de andere variaties over van de tertiary button (hover, focus, disabled, error, ...)."}),"\n",(0,g.jsx)(m.Hl,{of:f}),"\n",(0,g.jsx)(e.h3,{id:"disabled",children:"Disabled"}),"\n",(0,g.jsx)(e.p,{children:"Gebruik een disabled button om aan te tonen dat een actie niet uitgevoerd kan worden."}),"\n",(0,g.jsx)(m.Hl,{of:x}),"\n",(0,g.jsx)(e.h3,{id:"error",children:"Error"}),"\n",(0,g.jsx)(e.p,{children:"Gebruik een error button om de belangrijkheid van een actie aan te tonen."}),"\n",(0,g.jsx)(m.Hl,{of:j}),"\n",(0,g.jsx)(e.h3,{id:"block",children:"Block"}),"\n",(0,g.jsx)(m.Hl,{of:w}),"\n",(0,g.jsx)(e.h3,{id:"large",children:"Large"}),"\n",(0,g.jsx)(m.Hl,{of:T}),"\n",(0,g.jsx)(e.h3,{id:"wide",children:"Wide"}),"\n",(0,g.jsx)(m.Hl,{of:V}),"\n",(0,g.jsx)(e.h3,{id:"narrow",children:"Narrow"}),"\n",(0,g.jsx)(m.Hl,{of:S}),"\n",(0,g.jsx)(e.h3,{id:"loading",children:"Loading"}),"\n",(0,g.jsxs)(e.p,{children:["Gebruik een loading button om aan te tonen dat een actie enige tijd in beslag neemt.",(0,g.jsx)("br",{}),"\nGedurende het uitvoeren van de actie kan je de button als een loading button afbeelden.",(0,g.jsx)("br",{}),"\nWe raden aan een loading button enkel te gebruiken voor primary buttons.",(0,g.jsx)("br",{}),"\nIndien je wil dat de loading button ook disabled is, kan je het ",(0,g.jsx)(e.code,{children:"disabled"})," attribuut in combinatie met het ",(0,g.jsx)(e.code,{children:"loading"}),"\nattribuut gebruiken."]}),"\n",(0,g.jsx)(m.Hl,{of:B}),"\n",(0,g.jsx)(e.h3,{id:"icoon",children:"Icoon"}),"\n",(0,g.jsx)(m.Hl,{of:L}),"\n",(0,g.jsx)(e.h3,{id:"enkel-icoon",children:"Enkel icoon"}),"\n",(0,g.jsxs)(e.p,{children:["Om een icon-only button weer te geven kan je onderstaande code gebruiken.\nHet invullen van het ",(0,g.jsx)(e.code,{children:"label"})," attribuut is hierbij verplicht (",(0,g.jsx)(e.a,{href:"https://www.w3.org/TR/WCAG22/#name-role-value",target:"_blank",rel:"nofollow noopener noreferrer",children:"WCAG richtlijn"}),")."]}),"\n",(0,g.jsx)(m.Hl,{of:E}),"\n",(0,g.jsxs)(e.p,{children:["Voor een variant zonder opmaak (border, background), kan je het ",(0,g.jsx)(e.code,{children:"ghost"})," attribuut gebruiken."]}),"\n",(0,g.jsx)(m.Hl,{of:G}),"\n",(0,g.jsx)(e.h3,{id:"toggle",children:"Toggle"}),"\n",(0,g.jsxs)(e.p,{children:["Gebruik een toggle button om aan te duiden dat een actie aan of uit staat.",(0,g.jsx)("br",{}),"\nDe button wordt aan- of uitgezet door er op te klikken.",(0,g.jsx)("br",{}),"\nGebruik het ",(0,g.jsx)(e.code,{children:"on"})," attribuut om de button programmatorisch aan- of uit te zetten.",(0,g.jsx)("br",{}),"\nGebruik het ",(0,g.jsx)(e.code,{children:"controlled"})," attribuut als je wil dat de button zich niet zelf aan- of uitzet, gebruik dan het ",(0,g.jsx)(e.code,{children:"on"}),"\nattribuut om de button aan- of uit te zetten."]}),"\n",(0,g.jsx)(m.Hl,{of:A}),"\n",(0,g.jsx)(e.h3,{id:"cta-link",children:"CTA link"}),"\n",(0,g.jsxs)(e.p,{children:["In specifieke gevallen kan het nodig zijn een link af te beelden als een button. Daarvoor kan je dan de ",(0,g.jsx)(e.code,{children:"cta-link"}),"\n(call to action link) specifiëren, de button wordt dan technisch een link met een href, visueel blijft het een\nbutton. Bij voorkeur wordt de ",(0,g.jsx)(e.code,{children:"vl-button"})," gebruikt om een actie uit te voeren en de ",(0,g.jsx)(e.code,{children:"vl-link"})," om\nnaar een andere pagina te navigeren."]}),"\n",(0,g.jsx)(e.p,{children:"Aanbevelingen:"}),"\n",(0,g.jsxs)(e.ul,{children:["\n",(0,g.jsxs)(e.li,{children:["probeer ",(0,g.jsx)(e.code,{children:"cta-link"})," enkel te gebruiken als het echt nodig is, zoals om de aandacht te vestigen op een link\nvoor het uitvoeren van een belangrijke actie, bv.:","\n",(0,g.jsxs)(e.ul,{children:["\n",(0,g.jsx)(e.li,{children:"een link, die in een overzicht van objecten, wijst naar een formulier om een nieuw object aan te maken"}),"\n",(0,g.jsx)(e.li,{children:'de "Begin hier" link in een onboarding flow'}),"\n",(0,g.jsx)(e.li,{children:'bij "Registreer" of "Maak een account aan"'}),"\n"]}),"\n"]}),"\n",(0,g.jsx)(e.li,{children:"zorg ervoor dat de stijl verschillend is t.o.v. een standaard button (gebruik bv. een icoon)"}),"\n"]}),"\n",(0,g.jsx)(e.p,{children:"Beperkingen:"}),"\n",(0,g.jsxs)(e.ul,{children:["\n",(0,g.jsxs)(e.li,{children:["bij gebruik van ",(0,g.jsx)(e.code,{children:"cta-link"})," wordt de ",(0,g.jsx)(e.code,{children:"<button>"})," tag vervangen door een ",(0,g.jsx)(e.code,{children:"<a>"})," tag, hierdoor kan dit niet binnen een\nform gebruikt worden"]}),"\n",(0,g.jsxs)(e.li,{children:["het type attribuut heeft geen effect bij gebruik van ",(0,g.jsx)(e.code,{children:"cta-link"})]}),"\n"]}),"\n",(0,g.jsxs)(e.p,{children:["Meer context over wanneer een button of een link te gebruiken kan je vinden in de blogpost\n",(0,g.jsx)(e.a,{href:"https://adamsilver.io/blog/but-sometimes-buttons-look-like-links/",target:"_blank",rel:"nofollow noopener noreferrer",children:"'but sometimes buttons look like links'"}),"."]}),"\n",(0,g.jsx)(m.Hl,{of:R}),"\n",(0,g.jsx)(e.h3,{id:"input-group",children:"Input Group"}),"\n",(0,g.jsxs)(e.p,{children:["Het ",(0,g.jsx)(e.code,{children:"input-group"})," attribuut is er om de knop een specifieke stijl te geven in combinatie met een input-field. Het\nattribuut doet enkel iets in die combinatie. Zie ",(0,g.jsx)(e.a,{href:"/docs/form-input-group--documentatie",children:"Input Group [next]"}),"\nvoor meer informatie en voorbeelden."]}),"\n",(0,g.jsx)(e.h2,{id:"referenties",children:"Referenties"}),"\n",(0,g.jsx)(e.h3,{id:"digitaal-vlaanderen",children:"Digitaal Vlaanderen"}),"\n",(0,g.jsx)(e.p,{children:(0,g.jsx)(e.a,{href:"https://overheid.vlaanderen.be/webuniversum/v3/documentation/atoms/vl-ui-button",target:"_blank",rel:"nofollow noopener noreferrer",children:"Documentatie Digitaal Vlaanderen - Button"})})]})}(0,s.gy)([c.Y]);let $={id:"components-atom-button",title:"Components - Atom/button",tags:["autodocs"],args:a,argTypes:i,parameters:{docs:{page:function(n={}){let{wrapper:e}=Object.assign({},(0,b.RP)(),n.components);return e?(0,g.jsx)(e,Object.assign({},n,{children:(0,g.jsx)(p,n)})):p(n)}}}},y=(0,o._7)(a,({type:n,disabled:e,error:t,block:o,large:r,wide:l,narrow:a,secondary:i,tertiary:c,ghost:s,loading:g,icon:b,ctaLink:m,iconPlacement:p,toggle:$,on:y,controlled:k,external:h,inputGroup:v,label:f,defaultSlot:x,onVlClick:j,onVlToggle:w})=>(0,d.qy)`
        <vl-button
            type=${n}
            ?disabled=${e}
            ?error=${t}
            ?block=${o}
            ?large=${r}
            ?wide=${l}
            ?narrow=${a}
            ?secondary=${i}
            ?tertiary=${c}
            ?ghost=${s}
            ?loading=${g}
            label=${f}
            icon=${b}
            cta-link=${m}
            icon-placement=${p}
            ?toggle=${$}
            ?on=${y}
            ?controlled=${k}
            ?external=${h}
            ?inputGroup=${v}
            @vl-click=${j}
            @vl-toggle=${w}
        >
            ${(0,u._)(x)}
        </vl-button>
    `),k=y.bind({});k.storyName="vl-button - primary",k.args={defaultSlot:"Klik op mij"};let h=y.bind({});h.storyName="vl-button - secondary",h.args={defaultSlot:"Klik op mij",secondary:!0};let v=y.bind({});v.storyName="vl-button - tertiary",v.args={defaultSlot:"Klik op mij",tertiary:!0};let f=y.bind({});f.storyName="vl-button - ghost",f.args={defaultSlot:"Klik op mij",ghost:!0};let x=y.bind({});x.storyName="vl-button - disabled",x.args={defaultSlot:"Klik op mij",disabled:!0};let j=y.bind({});j.storyName="vl-button - error",j.args={defaultSlot:"Klik op mij",error:!0};let w=y.bind({});w.storyName="vl-button - block",w.args={defaultSlot:"Klik op mij",block:!0};let T=y.bind({});T.storyName="vl-button - large",T.args={defaultSlot:"Klik op mij",large:!0};let V=y.bind({});V.storyName="vl-button - wide",V.args={defaultSlot:"Klik op mij",wide:!0};let S=y.bind({});S.storyName="vl-button - narrow",S.args={defaultSlot:"Klik op mij",narrow:!0};let B=y.bind({});B.storyName="vl-button - loading",B.args={defaultSlot:"Klik op mij",loading:!0};let L=y.bind({});L.storyName="vl-button - icon",L.args={defaultSlot:"Klik op mij",icon:"location",iconPlacement:"before"};let E=y.bind({});E.storyName="vl-button - icon only",E.args={icon:"location",label:"Locatie"};let G=y.bind({});G.storyName="vl-button - icon only - ghost",G.args={icon:"trash",label:"Verwijder",ghost:!0};let A=y.bind({});A.storyName="vl-button - toggle",A.args={defaultSlot:"Klik op mij",toggle:!0};let R=y.bind({});R.storyName="vl-button - cta-link",R.args={icon:"add",defaultSlot:"Voeg nieuw object toe.",ctaLink:"https://www.vlaanderen.be"};let C=y.bind({});C.storyName="vl-button - input-group",C.args={defaultSlot:"Klik op mij",inputGroup:!0},k.parameters={...k.parameters,docs:{...k.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...k.parameters?.docs?.source}}},h.parameters={...h.parameters,docs:{...h.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...h.parameters?.docs?.source}}},v.parameters={...v.parameters,docs:{...v.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...v.parameters?.docs?.source}}},f.parameters={...f.parameters,docs:{...f.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...f.parameters?.docs?.source}}},x.parameters={...x.parameters,docs:{...x.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...x.parameters?.docs?.source}}},j.parameters={...j.parameters,docs:{...j.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...j.parameters?.docs?.source}}},w.parameters={...w.parameters,docs:{...w.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...w.parameters?.docs?.source}}},T.parameters={...T.parameters,docs:{...T.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...T.parameters?.docs?.source}}},V.parameters={...V.parameters,docs:{...V.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...V.parameters?.docs?.source}}},S.parameters={...S.parameters,docs:{...S.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...S.parameters?.docs?.source}}},B.parameters={...B.parameters,docs:{...B.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...B.parameters?.docs?.source}}},L.parameters={...L.parameters,docs:{...L.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...L.parameters?.docs?.source}}},E.parameters={...E.parameters,docs:{...E.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...E.parameters?.docs?.source}}},G.parameters={...G.parameters,docs:{...G.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...G.parameters?.docs?.source}}},A.parameters={...A.parameters,docs:{...A.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...A.parameters?.docs?.source}}},R.parameters={...R.parameters,docs:{...R.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...R.parameters?.docs?.source}}},C.parameters={...C.parameters,docs:{...C.parameters?.docs,source:{originalSource:"story(buttonArgs, ({\n  type,\n  disabled,\n  error,\n  block,\n  large,\n  wide,\n  narrow,\n  secondary,\n  tertiary,\n  ghost,\n  loading,\n  icon,\n  ctaLink,\n  iconPlacement,\n  toggle,\n  on,\n  controlled,\n  external,\n  inputGroup,\n  label,\n  defaultSlot,\n  onVlClick,\n  onVlToggle\n}) => html`\n        <vl-button\n            type=${type}\n            ?disabled=${disabled}\n            ?error=${error}\n            ?block=${block}\n            ?large=${large}\n            ?wide=${wide}\n            ?narrow=${narrow}\n            ?secondary=${secondary}\n            ?tertiary=${tertiary}\n            ?ghost=${ghost}\n            ?loading=${loading}\n            label=${label}\n            icon=${icon}\n            cta-link=${ctaLink}\n            icon-placement=${iconPlacement}\n            ?toggle=${toggle}\n            ?on=${on}\n            ?controlled=${controlled}\n            ?external=${external}\n            ?inputGroup=${inputGroup}\n            @vl-click=${onVlClick}\n            @vl-toggle=${onVlToggle}\n        >\n            ${unsafeHTML(defaultSlot)}\n        </vl-button>\n    `)",...C.parameters?.docs?.source}}};let N=["ButtonPrimary","ButtonSecondary","ButtonTertiary","ButtonGhost","ButtonDisabled","ButtonError","ButtonBlock","ButtonLarge","ButtonWide","ButtonNarrow","ButtonLoading","ButtonIcon","ButtonIconOnly","ButtonIconOnlyGhost","ButtonToggle","ButtonCtaLink","ButtonInputGroup"]},"../../node_modules/lit-html/directives/unsafe-html.js":(n,e,t)=>{t.d(e,{_:()=>a});var o=t("../../node_modules/lit-html/lit-html.js"),r=t("../../node_modules/lit-html/directive.js");/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */class l extends r.WL{constructor(n){if(super(n),this.et=o.s6,n.type!==r.OA.CHILD)throw Error(this.constructor.directiveName+"() can only be used in child bindings")}render(n){if(n===o.s6||null==n)return this.vt=void 0,this.et=n;if(n===o.c0)return n;if("string"!=typeof n)throw Error(this.constructor.directiveName+"() called with a non-string value");if(n===this.et)return this.vt;this.et=n;var e=[n];return e.raw=e,this.vt={_$litType$:this.constructor.resultType,strings:e,values:[]}}}l.directiveName="unsafeHTML",l.resultType=1;var a=(0,r.u$)(l)},"../../node_modules/lit/directives/unsafe-html.js":(n,e,t)=>{t.d(e,{_:()=>o._});var o=t("../../node_modules/lit-html/directives/unsafe-html.js")},"../../node_modules/react-dom/client.js":(n,e,t)=>{var o=t("../../node_modules/react-dom/index.js");e.createRoot=o.createRoot,e.hydrateRoot=o.hydrateRoot}}]);