"use strict";(self.webpackChunkuigov_web_components=self.webpackChunkuigov_web_components||[]).push([[1447],{"./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs":(e,t,o)=>{o.d(t,{r:()=>v});var n=o("./node_modules/react/index.js"),s=o("./node_modules/react-dom/client.js"),r=new Map,i=({callback:e,children:t})=>{let o=(0,n.useRef)();return(0,n.useLayoutEffect)(()=>{o.current!==e&&(o.current=e,e())},[e]),t},l=async(e,t)=>{let o=await d(t);return new Promise(t=>{o.render(n.createElement(i,{callback:()=>t(null)},e))})},a=(e,t)=>{let o=r.get(e);o&&(o.unmount(),r.delete(e))},d=async e=>{let t=r.get(e);return t||(t=s.createRoot(e),r.set(e,t)),t},m=o("./node_modules/@storybook/blocks/dist/index.mjs"),c={code:m.bD,a:m.Ct,...m.lO},u=class extends n.Component{constructor(){super(...arguments),this.state={hasError:!1}}static getDerivedStateFromError(){return{hasError:!0}}componentDidCatch(e){let{showException:t}=this.props;t(e)}render(){let{hasError:e}=this.state,{children:t}=this.props;return e?null:n.createElement(n.Fragment,null,t)}},v=class{constructor(){this.render=async(e,t,s)=>{let r={...c,...t?.components},i=m.WI;return new Promise((a,d)=>{o.e(9506).then(o.bind(o,"./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/index.js")).then(({MDXProvider:o})=>l(n.createElement(u,{showException:d,key:Math.random()},n.createElement(o,{components:r},n.createElement(i,{context:e,docsParameter:t}))),s)).then(()=>a())})},this.unmount=e=>{a(e)}}}},"./node_modules/@storybook/addon-docs/dist/index.mjs":(e,t,o)=>{o.d(t,{$4:()=>n.$4,Ed:()=>n.Ed,Hw:()=>n.Hw,Uh:()=>n.Uh,Xz:()=>n.Xz,Z$:()=>n.Z$,h_:()=>n.h_}),o("./node_modules/@storybook/addon-docs/dist/chunk-HLWAVYOI.mjs");var n=o("./node_modules/@storybook/blocks/dist/index.mjs")},"./apps/storybook/docs/e_ontwerp/form/3_custom-validation/form-custom-validation.stories.ts":(e,t,o)=>{o.r(t),o.d(t,{CustomValidation:()=>w,__namedExportsOrder:()=>y,default:()=>x});var n=o("./node_modules/lit-html/lit-html.js");o("./node_modules/react/index.js");var s=o("./node_modules/react/jsx-runtime.js"),r=o("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js");o("./node_modules/@storybook/addon-docs/dist/index.mjs");var i=o("./node_modules/@storybook/blocks/dist/index.mjs");function l(e){let t=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",ul:"ul",li:"li"},(0,r.ah)(),e.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"form---custom-validatie",children:"Form - Custom Validatie"}),"\n",(0,s.jsxs)(t.p,{children:["Om gebruik te maken van custom validatie moet je een nieuwe component maken dat overerft van één van onze form controls.",(0,s.jsx)("br",{}),"\nAan dit component kan je je custom validator toevoegen. Via de ",(0,s.jsx)(t.code,{children:"customError"})," ValidityState key kan je een error message linken aan je custom validator."]}),"\n",(0,s.jsx)(t.h2,{id:"extra-informatie",children:"Extra informatie"}),"\n",(0,s.jsxs)(t.p,{children:["Het is nodig om een custom component te maken voor elke custom validator die je wil toevoegen:",(0,s.jsx)("br",{})]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["De validators worden toegevoegd op de form controls d.m.v. een statische array. Dit betekent dat als je een custom validator toevoegt aan een form control, deze validator zal toegevoegd worden aan alle form controls van dit type.",(0,s.jsx)("br",{})]}),"\n",(0,s.jsxs)(t.li,{children:["De form controls maken gebruik van de ValidityState API waardoor er maximum 1 custom validator toegevoegd kan worden aan een form control.",(0,s.jsx)("br",{}),"\nBij het toevoegen van een 2de custom validator zal de eerste custom validator overschreven worden.",(0,s.jsx)("br",{})]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"voorbeeld",children:"Voorbeeld"}),"\n",(0,s.jsx)(i.Xz,{of:w,sourceState:"none"}),"\n",(0,s.jsxs)("details",{open:!0,children:[(0,s.jsx)("summary",{children:"Code"}),(0,s.jsx)(i.Hw,{code:"import { Validator } from '@open-wc/form-control';\nimport { CSSResult, LitElement, PropertyDeclarations, html, css } from 'lit';\nimport { registerWebComponents, webComponent } from '@domg-wc/common-utilities';\nimport { VlInputFieldComponent } from '@domg-wc/form/next/input-field';\nimport { VlErrorMessageComponent } from '@domg-wc/form/next/error-message';\nimport { VlFormLabelComponent } from '@domg-wc/form/next/form-label';\nimport { VlButtonComponent } from '@domg-wc/components/next/button';\nimport { vlElementsStyle } from '@domg-wc/elements';\n\nconst fooValidator: Validator = {\n    key: 'customError',\n    message: `Value does not equal 'foo'`,\n    isValid(_instance: HTMLElement, value: string): boolean {\n        if (!value) {\n            return true;\n        }\n\n        if (value !== 'foo') {\n            return false;\n        }\n\n        return true;\n    },\n};\n\n@webComponent('vl-input-field-with-foo-validator')\nexport class VlInputFieldWithFooValidatorComponent extends VlInputFieldComponent {\n    static override formControlValidators = [...VlInputFieldComponent.formControlValidators, fooValidator];\n}\n\n@webComponent('vl-form-custom-validation')\nexport class VlFormCustomValidationComponent extends LitElement {\n    private success = false;\n\n    static {\n        registerWebComponents([\n            VlInputFieldWithFooValidatorComponent,\n            VlFormLabelComponent,\n            VlErrorMessageComponent,\n            VlButtonComponent,\n        ]);\n    }\n\n    static override get styles(): (CSSResult | CSSResult[])[] {\n        return [\n            vlElementsStyle,\n            css`\n                form {\n                    margin-top: 1rem;\n                    max-width: 800px;\n                }\n\n                .form-buttons {\n                    vl-button-next:not(:last-child) {\n                        margin-right: 1.4rem;\n                    }\n                }\n            `,\n        ];\n    }\n\n    static override get properties(): PropertyDeclarations {\n        return {\n            success: { type: Boolean, state: true },\n        };\n    }\n\n    override render() {\n        return html`\n            <form class=\"vl-form\" @submit=${this.onSubmit} @reset=${this.onReset}>\n                <div class=\"vl-form-grid vl-form-grid--is-stacked\">\n                    <div class=\"vl-col--4-12\">\n                        <vl-form-label-next for=\"waarde\" label=\"Waarde *\" block></vl-form-label-next>\n                    </div>\n                    <div class=\"vl-col--8-12\">\n                        <vl-input-field-with-foo-validator\n                            id=\"waarde\"\n                            name=\"waarde\"\n                            block\n                            required\n                            ?success=${this.success}\n                            @invalid=${() => {\n                                this.success = false;\n                            }}\n                        ></vl-input-field-with-foo-validator>\n                        <vl-error-message-next for=\"waarde\" state=\"valueMissing\"\n                            >Gelieve een waarde in te vullen.</vl-error-message-next\n                        >\n                        <vl-error-message-next for=\"waarde\" state=\"customError\"\n                            >Gelieve 'foo' als waarde in te vullen.</vl-error-message-next\n                        >\n                    </div>\n                    <div class=\"vl-col--6-12 vl-push--4-12\">\n                        <div class=\"form-buttons\">\n                            <vl-button-next type=\"submit\">Verstuur</vl-button-next>\n                            <vl-button-next type=\"reset\" secondary>Reset</vl-button-next>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        `;\n    }\n\n    private onSubmit(e: Event) {\n        e.preventDefault();\n        this.success = true;\n    }\n\n    private onReset() {\n        this.success = false;\n    }\n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'vl-input-field-with-foo-validator': VlInputFieldWithFooValidatorComponent;\n        'vl-form-custom-validation': VlFormCustomValidationComponent;\n    }\n}\n",language:"ts",dark:!0})]})]})}var a=o("./libs/common/utilities/src/index.ts"),d=o("./node_modules/tslib/tslib.es6.mjs"),m=o("./node_modules/lit/index.js"),c=o("./libs/form/src/next/input-field/index.ts"),u=o("./libs/form/src/next/error-message/index.ts"),v=o("./libs/form/src/next/form-label/index.ts"),p=o("./libs/components/src/next/button/index.ts"),h=o("./libs/elements/src/index.ts");let f={key:"customError",message:"Value does not equal 'foo'",isValid:(e,t)=>!t||"foo"===t};class b extends c.z{static{this.formControlValidators=[...c.z.formControlValidators,f]}}b=(0,d.gn)([(0,a.a6)("vl-input-field-with-foo-validator")],b);class g extends m.oi{static{(0,a.YV)([b,v.i,u.m,p.Z])}static get styles(){return[h.CX,(0,m.iv)`
                form {
                    margin-top: 1rem;
                    max-width: 800px;
                }

                .form-buttons {
                    vl-button-next:not(:last-child) {
                        margin-right: 1.4rem;
                    }
                }
            `]}static get properties(){return{success:{type:Boolean,state:!0}}}render(){return(0,m.dy)`
            <form class="vl-form" @submit=${this.onSubmit} @reset=${this.onReset}>
                <div class="vl-form-grid vl-form-grid--is-stacked">
                    <div class="vl-col--4-12">
                        <vl-form-label-next for="waarde" label="Waarde *" block></vl-form-label-next>
                    </div>
                    <div class="vl-col--8-12">
                        <vl-input-field-with-foo-validator
                            id="waarde"
                            name="waarde"
                            block
                            required
                            ?success=${this.success}
                            @invalid=${()=>{this.success=!1}}
                        ></vl-input-field-with-foo-validator>
                        <vl-error-message-next for="waarde" state="valueMissing"
                            >Gelieve een waarde in te vullen.</vl-error-message-next
                        >
                        <vl-error-message-next for="waarde" state="customError"
                            >Gelieve 'foo' als waarde in te vullen.</vl-error-message-next
                        >
                    </div>
                    <div class="vl-col--6-12 vl-push--4-12">
                        <div class="form-buttons">
                            <vl-button-next type="submit">Verstuur</vl-button-next>
                            <vl-button-next type="reset" secondary>Reset</vl-button-next>
                        </div>
                    </div>
                </div>
            </form>
        `}onSubmit(e){e.preventDefault(),this.success=!0}onReset(){this.success=!1}constructor(...e){super(...e),this.success=!1}}g=(0,d.gn)([(0,a.a6)("vl-form-custom-validation")],g),(0,a.YV)([g]);let x={title:"Ontwerp/Form/Custom Validation",tags:["autodocs"],parameters:{docs:{page:function(e={}){let{wrapper:t}=Object.assign({},(0,r.ah)(),e.components);return t?(0,s.jsx)(t,Object.assign({},e,{children:(0,s.jsx)(l,e)})):l(e)}}}},w=()=>(0,n.dy)`<vl-form-custom-validation></vl-form-custom-validation>`;w.parameters={...w.parameters,docs:{...w.parameters?.docs,source:{originalSource:"() => html`<vl-form-custom-validation></vl-form-custom-validation>`",...w.parameters?.docs?.source}}};let y=["CustomValidation"]},"./node_modules/lit/directives/live.js":(e,t,o)=>{o.d(t,{a:()=>i});var n=o("./node_modules/lit-html/lit-html.js"),s=o("./node_modules/lit-html/directive.js"),r=o("./node_modules/lit-html/directive-helpers.js"),i=(0,s.XM)(class extends s.Xe{constructor(e){if(super(e),e.type!==s.pX.PROPERTY&&e.type!==s.pX.ATTRIBUTE&&e.type!==s.pX.BOOLEAN_ATTRIBUTE)throw Error("The `live` directive is not allowed on child or event bindings");if(!(0,r.OR)(e))throw Error("`live` bindings can only contain a single expression")}render(e){return e}update(e,t){var[o]=t;if(o===n.Jb||o===n.Ld)return o;var i=e.element,l=e.name;if(e.type===s.pX.PROPERTY){if(o===i[l])return n.Jb}else if(e.type===s.pX.BOOLEAN_ATTRIBUTE){if(!!o===i.hasAttribute(l))return n.Jb}else if(e.type===s.pX.ATTRIBUTE&&i.getAttribute(l)===o+"")return n.Jb;return(0,r.hl)(e),o}})},"./node_modules/react-dom/client.js":(e,t,o)=>{var n=o("./node_modules/react-dom/index.js");t.createRoot=n.createRoot,t.hydrateRoot=n.hydrateRoot},"./libs/form/src/next/error-message/vl-error-message.component.ts":(e,t,o)=>{o.d(t,{WU:()=>a,ml:()=>m,JZ:()=>d});var n=o("./libs/common/utilities/src/index.ts"),s=o("./node_modules/lit/index.js"),r=o("./node_modules/@domg/govflanders-style/component/index.js"),i=o("./node_modules/@domg/govflanders-style/common/index.js");let l=(0,s.iv)`
    .vl-form__error {
        margin-top: 0.2rem;
    }
`,a="vl-error-message-next",d={show:!1,for:null,state:null};class m extends n.fS{static get styles(){return[i.YN,r.J8,l]}static get properties(){return{show:{type:Boolean,reflect:!0},for:{type:String},state:{type:String}}}render(){return(0,s.dy)` <p class="vl-form__error" ?hidden=${!this.show}><slot></slot></p> `}constructor(...e){super(...e),this.show=d.show,this.for=d.for,this.state=d.state}}m=function(e,t,o,n){var s,r=arguments.length,i=r<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,o,n);else for(var l=e.length-1;l>=0;l--)(s=e[l])&&(i=(r<3?s(i):r>3?s(t,o,i):s(t,o))||i);return r>3&&i&&Object.defineProperty(t,o,i),i}([(0,n.a6)(a)],m)},"./libs/form/src/next/form-control/form-control.ts":(e,t,o)=>{o.d(t,{E:()=>d,N:()=>m});var n=o("./node_modules/@open-wc/form-control/src/FormControlMixin.js"),s=o("./node_modules/@open-wc/form-control/src/validators.js"),r=o("./node_modules/lit/index.js"),i=o("./node_modules/@open-wc/form-helpers/src/index.js"),l=o("./libs/form/src/next/error-message/vl-error-message.component.ts"),a=o("./libs/common/utilities/src/index.ts");o("./node_modules/reflect-metadata/Reflect.js");let d={id:"",name:"",label:"",required:!1,disabled:!1,error:!1,success:!1};class m extends(0,n.N)(a.fS){static{this.formControlValidators=[s.np,s.Hg]}static{this.shadowRootOptions={...r.oi.shadowRootOptions,delegatesFocus:!0}}static get properties(){return{id:{type:String},name:{type:String},label:{type:String},required:{type:Boolean},disabled:{type:Boolean},error:{type:Boolean},success:{type:Boolean},isInvalid:{type:Boolean,state:!0}}}connectedCallback(){super.connectedCallback(),this.addEventListener("keydown",this.onKeydown),this.addEventListener("invalid",this.onInvalid)}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener("keydown",this.onKeydown),this.removeEventListener("invalid",this.onInvalid)}updated(e){super.updated(e),e.has("isInvalid")||(this.isInvalid=!1,this.hideErrorMessages())}resetFormControl(){this.isInvalid=!1,this.hideErrorMessages(),this.dispatchEvent(new Event("vl-reset",{bubbles:!0,composed:!0}))}dispatchEventIfValid(e){this.validity.valid&&this.dispatchEvent(new CustomEvent("vl-valid",{composed:!0,bubbles:!0,detail:e}))}onKeydown(e){"Enter"===e.code&&this.form&&this.submitFormOnEnter&&(0,i.Ps)(this.form)}onInvalid(e){e.preventDefault(),this.isInvalid=!0,this.focusFirstInvalidInput(),this.showErrorMessage()}focusFirstInvalidInput(){let e=this.form?.querySelector(":invalid");this===e&&(e?.focus(),e?.scrollIntoView({behavior:"smooth",block:"center"}))}showErrorMessage(){let e="";for(let t in this.validity)if(this.validity[t]){e=t;break}let t=this.form?.querySelector(`${l.WU}[for="${this.id}"][state="${e}"]`);t||(t=this.form?.querySelector(`${l.WU}[for="${this.id}"]:not([state])`)),t?.setAttribute("show","")}hideErrorMessages(){let e=this.form?.querySelectorAll(`${l.WU}[for="${this.id}"]`);e?.forEach(e=>{e.removeAttribute("show")})}constructor(...e){super(...e),this.id=d.id,this.name=d.name,this.label=d.label,this.required=d.required,this.disabled=d.disabled,this.error=d.error,this.success=d.success,this.isInvalid=!1,this.submitFormOnEnter=!0}}}}]);