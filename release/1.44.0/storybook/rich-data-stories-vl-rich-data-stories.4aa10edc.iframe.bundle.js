"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[1081],{"../../libs/components/src/rich-data/stories/vl-rich-data.stories.ts":(e,a,n)=>{n.r(a),n.d(a,{RichDataDefault:()=>u,RichDataPager:()=>N,__namedExportsOrder:()=>g,default:()=>f});var t=n("../../libs/common/storybook/src/index.ts"),r=n("../../node_modules/lit-html/lit-html.js");n("../../libs/components/src/rich-data-table/vl-rich-data-field.component.ts"),n("../../libs/components/src/rich-data/vl-rich-data.component.ts");var i=n("../../libs/components/src/rich-data/stories/vl-rich-data.stories-arg.ts");let s={data:[{id:0,name:"Project #1",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Sander",lastName:"Kleykens"}]},{id:1,name:"Project #2",manager:{firstName:"Tom",lastName:"Coemans"},medewerkers:[{firstName:"Guy",lastName:"Wauters"}]},{id:2,name:"Project #3",manager:{firstName:"Tom",lastName:"Coemans"},medewerkers:[{firstName:"Guy",lastName:"Wauters"}]},{id:3,name:"Project #4",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:4,name:"Project #5",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:5,name:"Project #6",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:6,name:"Project #7",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:7,name:"Project #8",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:8,name:"Project #9",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:9,name:"Project #10",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:10,name:"Project #11",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:11,name:"Project #12",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:12,name:"Project #13",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:13,name:"Project #14",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:14,name:"Project #15",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:15,name:"Project #16",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:16,name:"Project #17",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:17,name:"Project #18",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:18,name:"Project #19",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:19,name:"Project #20",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:20,name:"Project #21",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:21,name:"Project #22",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:22,name:"Project #23",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:23,name:"Project #24",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]},{id:24,name:"Project #25",manager:{firstName:"Pascal",lastName:"Riquier"},medewerkers:[{firstName:"Pieter",lastName:"Beckers"}]}]},l=()=>{customElements.whenDefined("vl-rich-data").then(()=>{let e;let a=document.querySelector("#rich-data"),n=a?.querySelector('[slot="content"]'),t=a?.querySelector('[slot="sorter"]'),r=a?.querySelector("vl-pager"),i=(a,t,r)=>{e=a,n.innerHTML="",a?.slice(t,r).forEach(e=>{let a=new Date().toLocaleString(),t=e.manager,r=e.medewerkers[0],i=`
                    <li is="vl-search-result">
                      <a href="#">${e.name}</a>
                      <time>Gestart op ${a}</time>
                      <dl>
                        <dt>ID</dt>
                        <dd>${e.id}</dd>
                        <dt>Naam manager</dt>
                        <dd>${t.lastName}</dd>
                        <dt>Eerste medewerker</dt>
                        <dd>${r.lastName}</dd>
                        <dt>Project o.l.v. <b>manager</b></dt>
                        <dd>${e.name} o.l.v. <b>${t.firstName} ${t.lastName}</b></dd>
                      </dl>
                    </li>
                  `;n.insertAdjacentHTML("beforeend",i)})},l=(e,a,n)=>""===n?e:e.filter(e=>m(e,a).includes(n)),m=(e,a)=>{let n=a.split("."),t=e;for(let e=0;e<n.length;e++){if(void 0===t[n[e]])return;t=t[n[e]]}return t.toString()};a?.addEventListener("change",e=>{let n,t=s.data,r=s.data.length;if(e.detail.formData)for(let a of(n=[],e.detail.formData.entries()))r=(t=l(t,a[0],a[1])).length,n.push({name:a[0],value:a[1]});let m=e.detail.paging;if(m){let e=(m.currentPage-1)*10;i(t,e,e+10)}a&&(a.data={paging:{currentPage:e.detail.paging.currentPage,totalItems:r},filter:n})}),t?.addEventListener("change",n=>{let t=e;n.stopPropagation(),t&&(t.sort((e,a)=>{let t=n.target?.value?.split(".");if(!t)return 0;let r=e=>t.reduce((e,a)=>e[a],e)?.toString()||"",i=r(e),s=r(a);return i.localeCompare(s)}),a&&(a.data={paging:{currentPage:1,totalItems:t.length}}),i(t,0,10))}),a&&(a.data={paging:{currentPage:1,totalItems:25}}),i(s.data,0,r.getAttribute("items-per-page"))})};n("../../node_modules/react/index.js");var m=n("../../node_modules/react/jsx-runtime.js"),o=n("../../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),d=n("../../node_modules/@storybook/blocks/dist/index.mjs");function c(e){let a=Object.assign({h1:"h1",p:"p",code:"code",h2:"h2",pre:"pre",h3:"h3",a:"a"},(0,o.RP)(),e.components),{VluxMetaData:n}=a;return n||function(e,a){throw Error("Expected "+(a?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("VluxMetaData",!0),(0,m.jsxs)(m.Fragment,{children:[(0,m.jsx)(a.h1,{id:"rich-data",children:"Rich Data"}),"\n",(0,m.jsx)(n,{id:"components-rich-data"}),"\n",(0,m.jsxs)(a.p,{children:["Gebruik de ",(0,m.jsx)(a.code,{children:"rich-data"})," component om een lijst van data te tonen."]}),"\n",(0,m.jsx)(a.h2,{id:"voorbeeld",children:"Voorbeeld"}),"\n",(0,m.jsx)(a.pre,{children:(0,m.jsx)(a.code,{className:"language-js",children:"import { VlRichData } from '@domg-wc/components';\n"})}),"\n",(0,m.jsx)(a.pre,{children:(0,m.jsx)(a.code,{className:"language-html",children:"<vl-rich-data></vl-rich-data>\n"})}),"\n",(0,m.jsx)(d.Hl,{of:u}),"\n",(0,m.jsx)(a.h2,{id:"configuratie",children:"Configuratie"}),"\n",(0,m.jsx)(d.ov,{of:u}),"\n",(0,m.jsx)(a.h2,{id:"varianten",children:"Varianten"}),"\n",(0,m.jsx)(a.p,{children:"Een uitgewerkt voorbeeld vind je hier:"}),"\n",(0,m.jsx)(d.Hl,{of:N}),"\n",(0,m.jsxs)("details",{children:[(0,m.jsx)("summary",{children:"klik hier om een voorbeeld implementatie te zien"}),(0,m.jsx)(d.kL,{code:"import { richDataMockData } from './vl-rich-data.stories-mock';\nexport const richDataPaginationImplementation = ()=>{\n    customElements.whenDefined('vl-rich-data').then(()=>{\n        const richDataComponent = document.querySelector('#rich-data');\n        const content = richDataComponent?.querySelector('[slot=\"content\"]');\n        const sorter = richDataComponent?.querySelector('[slot=\"sorter\"]');\n        const pager = richDataComponent?.querySelector('vl-pager');\n        const data = richDataMockData;\n        let newData = undefined;\n        const setContentData = (data, from, to)=>{\n            newData = data;\n            content.innerHTML = ``;\n            data?.slice(from, to).forEach((project)=>{\n                const now = new Date().toLocaleString();\n                const manager = project.manager;\n                const medewerker = project.medewerkers[0];\n                const html = `\n                    <li is=\"vl-search-result\">\n                      <a href=\"#\">${project.name}</a>\n                      <time>Gestart op ${now}</time>\n                      <dl>\n                        <dt>ID</dt>\n                        <dd>${project.id}</dd>\n                        <dt>Naam manager</dt>\n                        <dd>${manager.lastName}</dd>\n                        <dt>Eerste medewerker</dt>\n                        <dd>${medewerker.lastName}</dd>\n                        <dt>Project o.l.v. <b>manager</b></dt>\n                        <dd>${project.name} o.l.v. <b>${manager.firstName} ${manager.lastName}</b></dd>\n                      </dl>\n                    </li>\n                  `;\n                content.insertAdjacentHTML('beforeend', html);\n            });\n        };\n        const filter = (data, pathToKey, value)=>{\n            if (value === '') {\n                return data;\n            }\n            return data.filter((element)=>{\n                const valueByPath = findValueByPath(element, pathToKey);\n                return valueByPath.includes(value);\n            });\n        };\n        const findValueByPath = (element, pathToKey)=>{\n            const keys = pathToKey.split('.');\n            let current = element;\n            for(let i = 0; i < keys.length; i++){\n                if (current[keys[i]] !== undefined) {\n                    current = current[keys[i]];\n                } else {\n                    return undefined;\n                }\n            }\n            return current.toString();\n        };\n        richDataComponent?.addEventListener('change', (event)=>{\n            let newData = data.data;\n            let totalItems = data.data.length;\n            let filterEntries = undefined;\n            if (event.detail.formData) {\n                filterEntries = [];\n                for (const entry of event.detail.formData.entries()){\n                    newData = filter(newData, entry[0], entry[1]);\n                    totalItems = newData.length;\n                    filterEntries.push({\n                        name: entry[0],\n                        value: entry[1]\n                    });\n                }\n            }\n            const pagination = event.detail.paging;\n            if (pagination) {\n                const from = (pagination.currentPage - 1) * 10;\n                setContentData(newData, from, from + 10);\n            }\n            if (richDataComponent) {\n                richDataComponent.data = {\n                    paging: {\n                        currentPage: event.detail.paging.currentPage,\n                        totalItems: totalItems\n                    },\n                    filter: filterEntries\n                };\n            }\n        });\n        sorter?.addEventListener('change', (event)=>{\n            const data = newData;\n            event.stopPropagation();\n            if (!data) return;\n            data.sort((firstElement, secondElement)=>{\n                const keys = event.target?.value?.split('.');\n                if (!keys) {\n                    return 0;\n                }\n                const getValue = (element)=>keys.reduce((value, key)=>value[key], element)?.toString() || '';\n                const firstValue = getValue(firstElement);\n                const secondValue = getValue(secondElement);\n                return firstValue.localeCompare(secondValue);\n            });\n            if (richDataComponent) {\n                richDataComponent.data = {\n                    paging: {\n                        currentPage: 1,\n                        totalItems: data.length\n                    }\n                };\n            }\n            setContentData(data, 0, 10);\n        });\n        if (richDataComponent) {\n            richDataComponent.data = {\n                paging: {\n                    currentPage: 1,\n                    totalItems: 25\n                }\n            };\n        }\n        setContentData(data.data, 0, pager.getAttribute('items-per-page'));\n    });\n};\n",language:"ts",dark:!0})]}),"\n",(0,m.jsxs)("details",{children:[(0,m.jsx)("summary",{children:"mock data voor voorbeeld kan je hier vinden"}),(0,m.jsx)(d.kL,{code:"export const richDataMockData = {\n    data: [\n        {\n            id: 0,\n            name: 'Project #1',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Sander',\n                    lastName: 'Kleykens'\n                }\n            ]\n        },\n        {\n            id: 1,\n            name: 'Project #2',\n            manager: {\n                firstName: 'Tom',\n                lastName: 'Coemans'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Guy',\n                    lastName: 'Wauters'\n                }\n            ]\n        },\n        {\n            id: 2,\n            name: 'Project #3',\n            manager: {\n                firstName: 'Tom',\n                lastName: 'Coemans'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Guy',\n                    lastName: 'Wauters'\n                }\n            ]\n        },\n        {\n            id: 3,\n            name: 'Project #4',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 4,\n            name: 'Project #5',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 5,\n            name: 'Project #6',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 6,\n            name: 'Project #7',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 7,\n            name: 'Project #8',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 8,\n            name: 'Project #9',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 9,\n            name: 'Project #10',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 10,\n            name: 'Project #11',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 11,\n            name: 'Project #12',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 12,\n            name: 'Project #13',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 13,\n            name: 'Project #14',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 14,\n            name: 'Project #15',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 15,\n            name: 'Project #16',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 16,\n            name: 'Project #17',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 17,\n            name: 'Project #18',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 18,\n            name: 'Project #19',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 19,\n            name: 'Project #20',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 20,\n            name: 'Project #21',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 21,\n            name: 'Project #22',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 22,\n            name: 'Project #23',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 23,\n            name: 'Project #24',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        },\n        {\n            id: 24,\n            name: 'Project #25',\n            manager: {\n                firstName: 'Pascal',\n                lastName: 'Riquier'\n            },\n            medewerkers: [\n                {\n                    firstName: 'Pieter',\n                    lastName: 'Beckers'\n                }\n            ]\n        }\n    ]\n};\n",language:"ts",dark:!0})]}),"\n",(0,m.jsx)(a.h2,{id:"referenties",children:"Referenties"}),"\n",(0,m.jsx)(a.h3,{id:"legacy-documentatie",children:"Legacy Documentatie"}),"\n",(0,m.jsx)(a.p,{children:(0,m.jsx)(a.a,{href:"https://webcomponenten.omgeving.vlaanderen.be/storybook/?path=/story/legacy-vl-rich-data--default",target:"_blank",rel:"nofollow noopener noreferrer",children:"Legacy Storybook - Rich Data"})}),"\n",(0,m.jsx)(a.p,{children:(0,m.jsx)(a.a,{href:"https://webcomponenten.omgeving.vlaanderen.be/doc/VlRichData.html",target:"_blank",rel:"nofollow noopener noreferrer",children:"Legacy Documentatie - Rich Data"})}),"\n",(0,m.jsx)(a.p,{children:(0,m.jsx)(a.a,{href:"https://webcomponenten.omgeving.vlaanderen.be/demo/vl-rich-data.html",target:"_blank",rel:"nofollow noopener noreferrer",children:"Legacy Demo - Rich Data"})})]})}let f={id:"components-rich-data",title:"components/rich-data",tags:["autodocs"],args:i.w,argTypes:i.Q,parameters:{docs:{page:function(e={}){let{wrapper:a}=Object.assign({},(0,o.RP)(),e.components);return a?(0,m.jsx)(a,Object.assign({},e,{children:(0,m.jsx)(c,e)})):c(e)}}}},u=({filterCloseable:e,filterClosed:a})=>(0,r.qy)` <vl-rich-data ?data-vl-filter-closable=${e} ?data-vl-filter-closed=${a}>
        <span slot="no-content">Geen resultaten gevonden</span>
        <ul is="vl-search-results" slot="content"></ul>
    </vl-rich-data>`;u.storyName="vl-rich-data - default";let N=(0,t._7)(i.w,({filterCloseable:e,filterClosed:a})=>(l(),(0,r.qy)`
        <vl-rich-data
            id="rich-data"
            ?data-vl-filter-closeable=${e}
            ?data-vl-filter-closed=${a}
        >
            <span slot="no-content">Geen resultaten</span>
            <ul is="vl-search-results" slot="content"></ul>
            <select is="vl-select" slot="sorter" aria-label="Sorteer">
                <option value="id">ID</option>
                <option value="manager.lastName">Naam manager</option>
            </select>
            <div is="vl-search-filter" data-vl-alt slot="filter">
                <form is="vl-form" id="rich-data-table-filter-form">
                    <section>
                        <h2>Doorzoek projecten</h2>
                        <div>
                            <label is="vl-form-label" for="filterOpId">Project id</label>
                            <input is="vl-input-field" id="filterOpId" type="text" name="id" value="" data-vl-block />
                        </div>
                    </section>
                    <section>
                        <h2>Project details</h2>
                        <div>
                            <label is="vl-form-label" for="filterOpNaamProject">Project naam</label>
                            <input
                                is="vl-input-field"
                                id="filterOpNaamProject"
                                type="text"
                                name="name"
                                value=""
                                data-vl-block
                            />
                        </div>
                        <div>
                            <label is="vl-form-label" for="filterOpNaamManager">Manager familienaam</label>
                            <input
                                is="vl-input-field"
                                id="filterOpNaamManager"
                                type="text"
                                name="manager.lastName"
                                value=""
                                data-vl-block
                            />
                        </div>
                    </section>
                    <div>
                        <button is="vl-button" type="submit">Zoeken</button>
                    </div>
                </form>
                <div>
                    <button is="vl-button-link" type="reset" form="rich-data-table-filter-form">
                        Zoekopdracht verwijderen
                    </button>
                </div>
            </div>
            <vl-pager
                id="rich-data-table-filter-sorting-paging-pager"
                slot="pager"
                data-vl-total-items="25"
                data-vl-items-per-page="10"
                data-vl-current-page="1"
                data-vl-align-center
            ></vl-pager>
        </vl-rich-data>
    `));N.storyName="vl-rich-data - pager",u.parameters={...u.parameters,docs:{...u.parameters?.docs,source:{originalSource:'({\n  filterCloseable,\n  filterClosed\n}: typeof richDataArgs) => {\n  return html` <vl-rich-data ?data-vl-filter-closable=${filterCloseable} ?data-vl-filter-closed=${filterClosed}>\n        <span slot="no-content">Geen resultaten gevonden</span>\n        <ul is="vl-search-results" slot="content"></ul>\n    </vl-rich-data>`;\n}',...u.parameters?.docs?.source}}},N.parameters={...N.parameters,docs:{...N.parameters?.docs,source:{originalSource:'story(richDataArgs, ({\n  filterCloseable,\n  filterClosed\n}: typeof richDataArgs) => {\n  richDataPaginationImplementation();\n  return html`\n        <vl-rich-data\n            id="rich-data"\n            ?data-vl-filter-closeable=${filterCloseable}\n            ?data-vl-filter-closed=${filterClosed}\n        >\n            <span slot="no-content">Geen resultaten</span>\n            <ul is="vl-search-results" slot="content"></ul>\n            <select is="vl-select" slot="sorter" aria-label="Sorteer">\n                <option value="id">ID</option>\n                <option value="manager.lastName">Naam manager</option>\n            </select>\n            <div is="vl-search-filter" data-vl-alt slot="filter">\n                <form is="vl-form" id="rich-data-table-filter-form">\n                    <section>\n                        <h2>Doorzoek projecten</h2>\n                        <div>\n                            <label is="vl-form-label" for="filterOpId">Project id</label>\n                            <input is="vl-input-field" id="filterOpId" type="text" name="id" value="" data-vl-block />\n                        </div>\n                    </section>\n                    <section>\n                        <h2>Project details</h2>\n                        <div>\n                            <label is="vl-form-label" for="filterOpNaamProject">Project naam</label>\n                            <input\n                                is="vl-input-field"\n                                id="filterOpNaamProject"\n                                type="text"\n                                name="name"\n                                value=""\n                                data-vl-block\n                            />\n                        </div>\n                        <div>\n                            <label is="vl-form-label" for="filterOpNaamManager">Manager familienaam</label>\n                            <input\n                                is="vl-input-field"\n                                id="filterOpNaamManager"\n                                type="text"\n                                name="manager.lastName"\n                                value=""\n                                data-vl-block\n                            />\n                        </div>\n                    </section>\n                    <div>\n                        <button is="vl-button" type="submit">Zoeken</button>\n                    </div>\n                </form>\n                <div>\n                    <button is="vl-button-link" type="reset" form="rich-data-table-filter-form">\n                        Zoekopdracht verwijderen\n                    </button>\n                </div>\n            </div>\n            <vl-pager\n                id="rich-data-table-filter-sorting-paging-pager"\n                slot="pager"\n                data-vl-total-items="25"\n                data-vl-items-per-page="10"\n                data-vl-current-page="1"\n                data-vl-align-center\n            ></vl-pager>\n        </vl-rich-data>\n    `;\n})',...N.parameters?.docs?.source}}};let g=["RichDataDefault","RichDataPager"]},"../../libs/components/src/rich-data/stories/vl-rich-data.stories-arg.ts":(e,a,n)=>{n.d(a,{Q:()=>i,w:()=>r});var t=n("../../libs/common/storybook/src/index.ts");let r={...t.D8,filterCloseable:!1,filterClosed:!1},i={...(0,t.RN)(),filterCloseable:{name:"data-vl-filter-closeable",description:"Filter sluitbaar maken en knop tonen om de filter te tonen en terug te verbergen.\n * Op een klein scherm wordt een modal geopend bij het klikken op de filter knop ipv een de filter naast de tabel te tonen.\n\n * Om elementen van de filter te verbergen enkel in de modal, kan het attribuut `data-vl-hidden-in-modal` gezet worden.",table:{type:{summary:t.QE.BOOLEAN},category:t.R6.ATTRIBUTES,defaultValue:{summary:r.filterCloseable}}},filterClosed:{name:"data-vl-filter-closed",description:"Verbergt de filter",table:{type:{summary:t.QE.BOOLEAN},category:t.R6.ATTRIBUTES,defaultValue:{summary:r.filterClosed}}}}}}]);