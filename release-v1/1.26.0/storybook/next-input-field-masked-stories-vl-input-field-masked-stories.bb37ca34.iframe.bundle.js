"use strict";(self.webpackChunkuigov_web_components=self.webpackChunkuigov_web_components||[]).push([[7094],{"./libs/form/src/next/input-field-masked/stories/vl-input-field-masked.stories.ts":(e,t,i)=>{i.r(t),i.d(t,{InputFieldMaskedDefault:()=>f,__namedExportsOrder:()=>x,default:()=>v});var a=i("./libs/common/storybook/src/index.ts"),n=i("./node_modules/lit/index.js"),s=i("./libs/form/src/next/input-field-masked/vl-input-field-masked.component.ts"),l=i("./libs/form/src/next/input-field/stories/vl-input-field.stories-arg.ts"),r=i("./libs/form/src/next/input-field-masked/masks.ts");let d={...l.F,...s.R},o={...l.j,pattern:{name:"pattern",description:"Dit attribuut wordt uitgeschakeld bij de input-field-masked component omdat het mask deze werking overneemt.<br/>Gelieve dit attribuut niet te gebruiken.",control:{type:null},table:{type:{summary:a.vK.STRING},category:a.aA.ATTRIBUTES,defaultValue:{summary:d.pattern}}},mask:{name:"mask",description:"Het mask van het input veld.<br/>Dit attribuut is niet reactief.",control:{type:"select"},options:Object.keys(r.T),table:{type:{summary:Object.keys(r.T)},category:a.aA.ATTRIBUTES,defaultValue:{summary:d.mask}}},maskPrefix:{name:"mask-prefix",description:"Het mask prefix van het input veld.<br/>De prefix wordt automatisch toegevoegd aan de value van het input veld indien de value niet begint met de prefix.<br/>Dit attribuut is niet reactief.",table:{type:{summary:a.vK.STRING},category:a.aA.ATTRIBUTES,defaultValue:{summary:d.maskPrefix}}},rawValue:{name:"raw-value",description:"Geeft de raw value terug bij het submitten van een form.<br/>Bij het price mask wordt de prefix weggelaten.",table:{type:{summary:a.vK.BOOLEAN},category:a.aA.ATTRIBUTES,defaultValue:{summary:d.rawValue}}},disableValidation:{name:"disable-validation",description:"Schakelt de automatische validatie uit bij het gebruik in een form.",table:{type:{summary:a.vK.BOOLEAN},category:a.aA.ATTRIBUTES,defaultValue:{summary:d.disableValidation}}},validationRegex:{name:"validation-regex",description:"Overschrijft de regex die gebruikt wordt tijdens het valideren bij het gebruik in een form.",table:{type:{summary:a.vK.REGEX},category:a.aA.PROPERTIES,defaultValue:{summary:d.validationRegex}}}};i("./node_modules/react/index.js");var m=i("./node_modules/react/jsx-runtime.js"),u=i("./node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),c=i("./node_modules/@storybook/addon-docs/dist/index.mjs"),p=i("./libs/form/src/next/form-control/stories/form-control.public-methods-doc.mdx");function h(e){let t=Object.assign({h1:"h1",p:"p",code:"code",a:"a",h2:"h2",pre:"pre",h3:"h3",ul:"ul",li:"li"},(0,u.ah)(),e.components);return(0,m.jsxs)(m.Fragment,{children:[(0,m.jsx)(t.h1,{id:"input-field-masked---next",children:"Input Field Masked - next"}),"\n",(0,m.jsxs)(t.p,{children:["Gebruik de ",(0,m.jsx)(t.code,{children:"input-field-masked-next"})," component om een input veld met een mask toe te voegen aan een pagina.",(0,m.jsx)("br",{}),"\nZie het ",(0,m.jsx)(t.a,{href:"/docs/applicatief-voorbeelden-form-demo--documentatie",children:"form demo"})," voorbeeld voor het gebruik binnen een form."]}),"\n",(0,m.jsxs)(t.p,{children:["Dit component erft over van de ",(0,m.jsx)(t.a,{href:"/docs/form-next-input-field--documentatie",children:"input-field-next"})," component."]}),"\n",(0,m.jsx)(t.h2,{id:"voorbeeld",children:"Voorbeeld"}),"\n",(0,m.jsx)(t.pre,{children:(0,m.jsx)(t.code,{className:"language-js",children:"import { VlInputFieldMaskedComponent } from '@domg-wc/form/next/input-field-masked';\n"})}),"\n",(0,m.jsx)(t.pre,{children:(0,m.jsx)(t.code,{className:"language-html",children:"<vl-input-field-masked-next></vl-input-field-masked-next>\n"})}),"\n",(0,m.jsx)(c.Xz,{of:f}),"\n",(0,m.jsx)(t.h2,{id:"configuratie",children:"Configuratie"}),"\n",(0,m.jsx)(c.Ed,{of:f}),"\n",(0,m.jsx)(t.h2,{id:"publieke-methodes",children:"Publieke methodes"}),"\n",(0,m.jsx)(p.Z,{}),"\n",(0,m.jsx)(t.h3,{id:"getrawvalue-string",children:"getRawValue(): string"}),"\n",(0,m.jsxs)(t.p,{children:["Geeft de raw value van de input terug (zonder mask).",(0,m.jsx)("br",{}),"\nBij het ",(0,m.jsx)(t.code,{children:"price"})," mask wordt de prefix weggelaten."]}),"\n",(0,m.jsx)(t.h2,{id:"validatie",children:"Validatie"}),"\n",(0,m.jsxs)(t.ul,{children:["\n",(0,m.jsx)(t.li,{children:"Bij het gebruik in een form wordt er automatisch mask validatie toegevoegd aan het input veld."}),"\n",(0,m.jsxs)(t.li,{children:["De ",(0,m.jsx)(t.code,{children:"patternMismatch"})," ValidityState key wordt gebruikt voor de mask validatie."]}),"\n",(0,m.jsx)(t.li,{children:"Het 'pattern' attribuut wordt uitgeschakeld omdat het mask deze werking overneemt, gelieve dit attribuut niet te gebruiken."}),"\n",(0,m.jsxs)(t.li,{children:["Het is mogelijk om de mask validatie te combineren met andere validaties (bv. ",(0,m.jsx)(t.code,{children:"required"}),")."]}),"\n"]}),"\n",(0,m.jsx)(t.h2,{id:"referenties",children:"Referenties"}),"\n",(0,m.jsx)(t.h3,{id:"cleavejs",children:"Cleave.js"}),"\n",(0,m.jsx)(t.p,{children:(0,m.jsx)(t.a,{href:"https://nosir.github.io/cleave.js/",target:"_blank",rel:"nofollow noopener noreferrer",children:"Documentatie Cleave.js"})})]})}(0,i("./libs/common/utilities/src/index.ts").YV)([s.X]);let v={title:"Form-next/input-field-masked",tags:["autodocs"],args:d,argTypes:o,parameters:{docs:{page:function(e={}){let{wrapper:t}=Object.assign({},(0,u.ah)(),e.components);return t?(0,m.jsx)(t,Object.assign({},e,{children:(0,m.jsx)(h,e)})):h(e)}}}},f=(0,a.yg)(d,({id:e,name:t,label:i,required:a,disabled:s,error:l,success:r,block:d,readonly:o,type:m,value:u,placeholder:c,autocomplete:p,minLength:h,maxLength:v,min:f,max:x,mask:k,maskPrefix:b,rawValue:g,disableValidation:j,validationRegex:y,onVlInput:$,onVlReset:V,onVlValid:w})=>(0,n.dy)`
            <div>
                <label class="vl-form__label vl-form__label--block" for="rrn">Rijksregisternummer</label>
                <vl-input-field-masked-next
                    id=${e}
                    name=${t}
                    label=${i}
                    ?required=${a}
                    ?disabled=${s}
                    ?error=${l}
                    ?success=${r}
                    ?block=${d}
                    ?readonly=${o}
                    type=${m}
                    value=${u}
                    placeholder=${c}
                    autocomplete=${p}
                    min-length=${h}
                    max-length=${v}
                    min=${f}
                    max=${x}
                    mask=${k}
                    mask-prefix=${b}
                    ?raw-value=${g}
                    ?disable-validation=${j}
                    .validationRegex=${y}
                    @vl-input=${$}
                    @vl-reset=${V}
                    @vl-valid=${w}
                ></vl-input-field-masked-next>
            </div>
        `);f.storyName="vl-input-field-masked-next - default",f.args={id:"rrn",name:"rrn",mask:"rrn"},f.parameters={...f.parameters,docs:{...f.parameters?.docs,source:{originalSource:'story(inputFieldMaskedArgs, ({\n  id,\n  name,\n  label,\n  required,\n  disabled,\n  error,\n  success,\n  block,\n  readonly,\n  type,\n  value,\n  placeholder,\n  autocomplete,\n  minLength,\n  maxLength,\n  min,\n  max,\n  mask,\n  maskPrefix,\n  rawValue,\n  disableValidation,\n  validationRegex,\n  onVlInput,\n  onVlReset,\n  onVlValid\n}) => {\n  return html`\n            <div>\n                <label class="vl-form__label vl-form__label--block" for="rrn">Rijksregisternummer</label>\n                <vl-input-field-masked-next\n                    id=${id}\n                    name=${name}\n                    label=${label}\n                    ?required=${required}\n                    ?disabled=${disabled}\n                    ?error=${error}\n                    ?success=${success}\n                    ?block=${block}\n                    ?readonly=${readonly}\n                    type=${type}\n                    value=${value}\n                    placeholder=${placeholder}\n                    autocomplete=${autocomplete}\n                    min-length=${minLength}\n                    max-length=${maxLength}\n                    min=${min}\n                    max=${max}\n                    mask=${mask}\n                    mask-prefix=${maskPrefix}\n                    ?raw-value=${rawValue}\n                    ?disable-validation=${disableValidation}\n                    .validationRegex=${validationRegex}\n                    @vl-input=${onVlInput}\n                    @vl-reset=${onVlReset}\n                    @vl-valid=${onVlValid}\n                ></vl-input-field-masked-next>\n            </div>\n        `;\n})',...f.parameters?.docs?.source}}};let x=["InputFieldMaskedDefault"]},"./libs/form/src/next/input-field-masked/masks.ts":(e,t,i)=>{i.d(t,{T:()=>a});let a={iban:{blocks:[4,4,4,4],prefix:"BE",numericOnly:!0,numeralPositiveOnly:!0,stripLeadingZeroes:!1,validationRegex:/^[A-Z]{2}[0-9]{14}$/},rrn:{blocks:[2,2,2,3,2],delimiters:[".",".","-","."],numericOnly:!0,numeralPositiveOnly:!0,stripLeadingZeroes:!1,validationRegex:/^[0-9]{11}$/},uuid:{blocks:[8,4,4,4,12],delimiter:"-",stripLeadingZeroes:!1,validationRegex:/^[0-9a-fA-F]{32}$/,customTransformFn:e=>e.replace(/[^0-9a-fA-F-]/g,"")},date:{date:!0,datePattern:["d","m","Y"],delimiter:".",validationRegex:/^[0-9]{8}$/},numerical:{numeral:!0,numeralDecimalMark:",",delimiter:".",validationRegex:/^[0-9]+(.[0-9]+)?$/},price:{numeral:!0,prefix:"â‚¬",rawValueTrimPrefix:!0,numeralDecimalMark:",",delimiter:".",validationRegex:/^[0-9]+(.[0-9]+)?$/},phone:{blocks:[3,2,2,2,2],prefix:"+32",numericOnly:!0,numeralPositiveOnly:!0,delimiter:" ",validationRegex:/^\+[0-9]{10}$/},mobile:{blocks:[3,3,2,2,2],prefix:"+32",numericOnly:!0,numeralPositiveOnly:!0,delimiter:" ",validationRegex:/^\+[0-9]{11}$/}}},"./libs/form/src/next/input-field-masked/vl-input-field-masked.component.ts":(e,t,i)=>{i.d(t,{R:()=>d,X:()=>o});var a=i("./node_modules/lit/decorators.js"),n=i("./node_modules/cleave.js/dist/cleave-esm.js"),s=i("./libs/form/src/next/input-field-masked/masks.ts"),l=i("./libs/form/src/next/input-field/vl-input-field.component.ts");let r={key:"patternMismatch",message:()=>"Value does not meet the given mask pattern.",isValid(e,t){let{disableValidation:i}=e,a=e.validationRegex||e.maskOptions?.validationRegex,n=e.cleaveInstance;if(i||!t||!a||!n)return!0;let s=n.getRawValue();return!!new RegExp(a).exec(s)}},d={...l.E,mask:"",maskPrefix:"",rawValue:!1,disableValidation:!1,validationRegex:null};class o extends l.z{static{this.formControlValidators=[...l.z.formControlValidators,r]}static get properties(){return{mask:{type:String},maskPrefix:{type:String,attribute:"mask-prefix"},rawValue:{type:Boolean,attribute:"raw-value"},disableValidation:{type:Boolean,attribute:"disable-validation"},validationRegex:{type:Object}}}connectedCallback(){super.connectedCallback(),this.maskOptions={...s.T[this.mask]},this.maskOptions&&(this.maskPrefix&&(this.maskOptions.prefix=this.maskPrefix),this.value.startsWith(this.maskOptions.prefix||"")||(this.value=this.maskOptions.prefix+this.value))}firstUpdated(e){super.firstUpdated(e),this.maskOptions&&(this.cleaveInstance=new n.Z(this.validationTarget,this.maskOptions))}resetFormControl(){super.resetFormControl(),this.initialValue.startsWith(this.maskOptions?.prefix||"")?this.value=this.initialValue:this.value=this.maskOptions?.prefix+this.initialValue}getRawValue(){return this.cleaveInstance?.getRawValue()}onInput(){setTimeout(()=>{let e=this.validationTarget.value,t=this.maskOptions?.customTransformFn,i=t?t(e):e;if(this.value===i){this.requestUpdate();return}this.value=i},0)}onUpdated(e){if(e.has("value")||e.has("rawValue")){let e=this.rawValue?this.getRawValue()||"":this.value;(this.value===this.maskOptions?.prefix||this.getRawValue()===this.maskOptions?.prefix)&&(e="");let t={value:e};this.setValue(e),this.dispatchEvent(new CustomEvent("vl-input",{composed:!0,bubbles:!0,detail:t})),this.dispatchEventIfValid(t)}}constructor(...e){super(...e),this.mask=d.mask,this.maskPrefix=d.maskPrefix,this.rawValue=d.rawValue,this.disableValidation=d.disableValidation,this.validationRegex=d.validationRegex,this.maskOptions=null,this.cleaveInstance=null}}o=function(e,t,i,a){var n,s=arguments.length,l=s<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,i):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)l=Reflect.decorate(e,t,i,a);else for(var r=e.length-1;r>=0;r--)(n=e[r])&&(l=(s<3?n(l):s>3?n(t,i,l):n(t,i))||l);return s>3&&l&&Object.defineProperty(t,i,l),l}([(0,a.Mo)("vl-input-field-masked-next")],o)}}]);